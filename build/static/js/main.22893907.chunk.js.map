{"version":3,"sources":["utils/constants.js","actions/errors.js","reducers/auth.js","reducers/errors.js","reducers/profile.js","store/store.js","utils/common.js","utils/api.js","actions/profile.js","actions/auth.js","components/Login.js","components/Register.js","components/Profile.js","components/Header.js","components/Logout.js","actions/account.js","actions/transactions.js","utils/mask.js","components/AddAccountForm.js","components/AccountForm.js","components/Report.js","components/Summary.js","components/Account.js","router/AppRouter.js","index.js"],"names":["BASE_API_URL","getErrors","errors","type","authReducer","state","action","user","errorsReducer","profileReducer","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","auth","applyMiddleware","thunk","validateFields","fieldsToValidate","every","field","Object","values","updateStore","userid","email","dispatch","signIn","token","localStorage","getItem","initiateGetProfile","setAuthHeader","axios","defaults","headers","common","removeAuthHeader","get","url","params","a","shouldSetAuthHeader","shouldRemoveAuthHeader","result","post","patch","updateProfile","initiateUpdateProfile","profileData","data","response","initiateLogin","password","setItem","history","push","console","log","registerNewUser","success","Login","errorMsg","handleLogin","event","preventDefault","setState","signin_error","props","handleInputChange","target","name","value","prevProps","_","isEqual","this","className","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","variant","to","React","Component","connect","Register","first_name","last_name","cpassword","successMsg","isSubmitted","registerUser","signup_error","then","Profile","handleSubmit","update_error","handleOnChange","isEmpty","Header","Logout","removeItem","setAccount","accountDetails","updateAccountBalance","amountToChange","operation","initiateGetAccntDetails","account","initiateAddAccntDetails","account_no","bank_name","ifsc","initiateUpdateAccntDetails","addTransaction","transaction","initiateDepositAmount","account_id","amount","transaction_date","Date","deposit_amount","withdraw_amount","initiateWithdrawAmount","initiateGetTransactions","start_date","end_date","query","transactions","downloadReport","responseType","download","status","transactions_error","maskNumber","number","slice","padStart","length","AddAccountForm","handleAddAccount","add_error","prevState","AccountForm","editAccount","handleUpdateAccount","handleAmountChange","handleEditAccount","handleOnSubmit","selectedType","total_balance","charAt","toUpperCase","href","onClick","withdraw_error","Report","striped","hover","pagination","isKey","dataField","Summary","startDate","endDate","isDownloading","formSubmitted","handleStartDateChange","date","handleEndDateChange","convertedStartDate","moment","format","convertedEndDate","style","maxWidth","Fragment","Account","setSelectedType","createBrowserHistory","path","component","exact","user_token","currentPath","location","pathname","decoded","jwt_decode","maintainSession","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.22893907.chunk.js","sourcesContent":["export const BASE_API_URL = 'http://localhost:5000';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const RESET_ERRORS = 'RESET_ERRORS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const SET_ACCOUNT = 'SET_ACCOUNt';\r\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT';\r\nexport const SET_TRANSACTIONS = 'SET_TRANSACTIONS';\r\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION';\r\nexport const RESET_ACCOUNT = 'RESET_ACCOUNT';","import { GET_ERRORS, RESET_ERRORS } from '../utils/constants';\r\n\r\nexport const getErrors = (errors) => ({\r\n  type: GET_ERRORS,\r\n  errors\r\n});\r\n\r\nexport const resetErrors = () => ({\r\n  type: RESET_ERRORS\r\n});\r\n","import { SIGN_IN, SIGN_OUT } from '../utils/constants';\r\n\r\nconst authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return action.user;\r\n    case SIGN_OUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { GET_ERRORS, RESET_ERRORS } from '../utils/constants';\r\n\r\nconst errorsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.errors;\r\n    case RESET_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorsReducer;\r\n","import { UPDATE_PROFILE } from '../utils/constants';\r\n\r\nconst profileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE:\r\n      return { ...action.profile };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from '../reducers/auth';\r\nimport errorsReducer from '../reducers/errors';\r\nimport profileReducer from '../reducers/profile';\r\nimport transactionsReducer from '../reducers/transactions';\r\nimport accountReducer from '../reducers/account';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  combineReducers({\r\n    auth: authReducer,\r\n    errors: errorsReducer,\r\n    profile: profileReducer\r\n    //transactions: transactionsReducer,\r\n    //account: accountReducer,\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import jwt_decode from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport store from '../store/store';\r\nimport { initiateGetProfile } from '../actions/profile';\r\nimport { signIn } from '../actions/auth';\r\nimport { history } from '../router/AppRouter';\r\n\r\nexport const validateFields = (fieldsToValidate) => {\r\n  return fieldsToValidate.every((field) => Object.values(field)[0] !== '');\r\n};\r\n\r\nexport const maintainSession = () => {\r\n  const user_token = localStorage.getItem('user_token');\r\n  if (user_token) {\r\n    const currentPath = window.location.pathname;\r\n    if (currentPath === '/' || currentPath === '/register') {\r\n      history.push('/profile');\r\n    }\r\n    const decoded = jwt_decode(user_token);\r\n    updateStore(decoded);\r\n  } else {\r\n    history.push('/');\r\n  }\r\n};\r\n\r\nexport const updateStore = (user) => {\r\n  const { userid, email } = user;\r\n  store.dispatch(\r\n    signIn({\r\n      userid,\r\n      email,\r\n      token: localStorage.getItem('user_token')\r\n    })\r\n  );\r\n  store.dispatch(initiateGetProfile(email));\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  const token = localStorage.getItem('user_token');\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n};\r\n\r\nexport const removeAuthHeader = () => {\r\n  delete axios.defaults.headers.common['Authorization'];\r\n};\r\n","import axios from 'axios';\r\nimport { setAuthHeader, removeAuthHeader } from './common';\r\n\r\nexport const get = async (\r\n  url,\r\n  params,\r\n  shouldSetAuthHeader = true,\r\n  shouldRemoveAuthHeader = false\r\n) => {\r\n  if (shouldSetAuthHeader) {\r\n    setAuthHeader();\r\n  }\r\n  const result = await axios.get(url, params);\r\n  if (shouldRemoveAuthHeader) {\r\n    removeAuthHeader();\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const post = async (\r\n  url,\r\n  params,\r\n  shouldSetAuthHeader = true,\r\n  shouldRemoveAuthHeader = false\r\n) => {\r\n  if (shouldSetAuthHeader) {\r\n    setAuthHeader();\r\n  }\r\n  const result = await axios.post(url, params);\r\n  if (shouldRemoveAuthHeader) {\r\n    removeAuthHeader();\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const patch = async (\r\n  url,\r\n  params,\r\n  shouldSetAuthHeader = true,\r\n  shouldRemoveAuthHeader = false\r\n) => {\r\n  if (shouldSetAuthHeader) {\r\n    setAuthHeader();\r\n  }\r\n  const result = await axios.patch(url, params);\r\n  if (shouldRemoveAuthHeader) {\r\n    removeAuthHeader();\r\n  }\r\n  return result;\r\n};\r\n","import { BASE_API_URL } from '../utils/constants';\r\nimport { getErrors } from './errors';\r\nimport { UPDATE_PROFILE } from '../utils/constants';\r\nimport { get, post } from '../utils/api';\r\n\r\nexport const updateProfile = (profile) => ({\r\n  type: UPDATE_PROFILE,\r\n  profile\r\n});\r\n\r\nexport const initiateUpdateProfile = (profileData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const profile = await post(`${BASE_API_URL}/profile`, profileData);\r\n      dispatch(updateProfile(profile.data));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateGetProfile = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const profile = await get(`${BASE_API_URL}/profile`);\r\n      dispatch(updateProfile(profile.data));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport { SIGN_IN, SIGN_OUT, BASE_API_URL } from '../utils/constants';\r\nimport { initiateGetProfile } from './profile';\r\nimport { history } from '../router/AppRouter';\r\nimport { getErrors } from './errors';\r\nimport { post } from '../utils/api';\r\n//import { resetAccount } from './account';\r\n\r\n\r\nexport const signIn = (user) => ({\r\n  type: SIGN_IN,\r\n  user\r\n});\r\n\r\nexport const initiateLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await axios.post(`${BASE_API_URL}/signin`, {\r\n        email,\r\n        password\r\n      });\r\n      const user = result.data;\r\n      localStorage.setItem('user_token', user.token);\r\n      dispatch(signIn(user));\r\n      dispatch(initiateGetProfile(user.email));\r\n      history.push('/profile');\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const registerNewUser = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.post(`${BASE_API_URL}/signup`, data);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      error.response && dispatch(getErrors(error.response.data));\r\n      return { success: false };\r\n    }\r\n  };\r\n};\r\n\r\nexport const signOut = () => ({\r\n  type: SIGN_OUT\r\n});\r\n\r\nexport const initiateLogout = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await post(`${BASE_API_URL}/logout`, true, true);\r\n      localStorage.removeItem('user_token');\r\n      //dispatch(resetAccount());\r\n      return dispatch(signOut());\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { initiateLogin } from '../actions/auth';\r\nimport { resetErrors } from '../actions/errors';\r\nimport { validateFields } from '../utils/common';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    errorMsg: ''\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({ errorMsg: this.props.errors });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(resetErrors());\r\n  }\r\n\r\n  handleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          signin_error: ''\r\n        }\r\n      });\r\n      // login successful\r\n      this.props.dispatch(initiateLogin(email, password));\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errorMsg } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <h1>Banking Application</h1>\r\n        <div className=\"login-form\">\r\n          <Form onSubmit={this.handleLogin}>\r\n            {errorMsg && errorMsg.signin_error && (\r\n              <p className=\"errorMsg centered-message\">\r\n                {errorMsg.signin_error}\r\n              </p>\r\n            )}\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <div className=\"action-items\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <Link to=\"/register\" className=\"btn btn-secondary\">\r\n                Create account\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { registerNewUser } from '../actions/auth';\r\nimport { resetErrors } from '../actions/errors';\r\nimport { validateFields } from '../utils/common';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password: '',\r\n    cpassword: '',\r\n    successMsg: '',\r\n    errorMsg: '',\r\n    isSubmitted: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({ errorMsg: this.props.errors });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(resetErrors());\r\n  }\r\n\r\n  registerUser = (event) => {\r\n    event.preventDefault();\r\n    const { first_name, last_name, email, password, cpassword } = this.state;\r\n\r\n    const fieldsToValidate = [\r\n      { first_name },\r\n      { last_name },\r\n      { email },\r\n      { password },\r\n      { cpassword }\r\n    ];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signup_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      if (password !== cpassword) {\r\n        this.setState({\r\n          errorMsg: {\r\n            signup_error: 'Password and confirm password does not match.'\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ isSubmitted: true });\r\n        this.props.dispatch(registerNewUser({ first_name, last_name, email, password })).then((response) => \r\n        { if (response.success) {this.setState({successMsg: 'User registered successfully.',errorMsg: ''});}});\r\n      }\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errorMsg, successMsg, isSubmitted } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <h2>Register User</h2>\r\n        <div className=\"login-form\">\r\n          <Form onSubmit={this.registerUser}>\r\n            {errorMsg && errorMsg.signup_error ? (\r\n              <p className=\"errorMsg centered-message\">\r\n                {errorMsg.signup_error}\r\n              </p>\r\n            ) : (\r\n              isSubmitted && (\r\n                <p className=\"successMsg centered-message\">{successMsg}</p>\r\n              )\r\n            )}\r\n            <Form.Group controlId=\"first_name\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"first_name\"\r\n                placeholder=\"Enter first name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"last_name\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"last_name\"\r\n                placeholder=\"Enter last name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"cpassword\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cpassword\"\r\n                placeholder=\"Enter confirm password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <div className=\"action-items\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Register\r\n              </Button>\r\n              <Link to=\"/\" className=\"btn btn-secondary\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { initiateUpdateProfile } from '../actions/profile';\r\nimport { validateFields } from '../utils/common';\r\nimport { resetErrors } from '../actions/errors';\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    errorMsg: '',\r\n    isSubmitted: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { profile } = this.props;\r\n    if (!_.isEmpty(profile)) {\r\n      const { first_name, last_name, email } = profile;\r\n      this.setState({\r\n        first_name,\r\n        last_name,\r\n        email\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({\r\n        errorMsg: this.props.errors\r\n      });\r\n    }\r\n    if (!_.isEqual(prevProps.profile, this.props.profile)) {\r\n      const { first_name, last_name, email } = this.props.profile;\r\n      this.setState({ first_name, last_name, email });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(resetErrors());\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { first_name, last_name } = this.state;\r\n    const profileData = {\r\n      first_name,\r\n      last_name\r\n    };\r\n\r\n    const fieldsToValidate = [{ first_name }, { last_name }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          update_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ isSubmitted: true, errorMsg: '' });\r\n      this.props.dispatch(initiateUpdateProfile(profileData));\r\n    }\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errorMsg, first_name, last_name, email, isSubmitted } = this.state;\r\n    return (\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <Form onSubmit={this.handleSubmit} className=\"profile-form\">\r\n          {errorMsg && errorMsg.update_error ? (\r\n            <p className=\"errorMsg centered-message\">{errorMsg.update_error}</p>\r\n          ) : (\r\n            isSubmitted && (\r\n              <p className=\"successMsg centered-message\">\r\n                Profile updated successfully.\r\n              </p>\r\n            )\r\n          )}\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address:</Form.Label>\r\n            <span className=\"label-value\">{email}</span>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"first_name\">\r\n            <Form.Label>First name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              placeholder=\"Enter your first name\"\r\n              value={first_name}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"last_name\">\r\n            <Form.Label>Last name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              placeholder=\"Enter your last name\"\r\n              value={last_name}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Banking Application</h1>\r\n      <div className=\"links\">\r\n      <Link to=\"/account\" className=\"link\">\r\n          Account\r\n        </Link>\r\n        <Link to=\"/profile\" className=\"link\">\r\n          Profile\r\n        </Link>\r\n        <Link to=\"/logout\" className=\"link\">\r\n          Logout\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initiateLogout } from '../actions/auth';\r\n\r\nclass Logout extends React.Component {\r\n  componentDidMount() {\r\n    const { history, dispatch } = this.props;\r\n    dispatch(initiateLogout()).then(() => history.push('/'));\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default connect()(Logout);\r\n","\r\nimport { BASE_API_URL } from '../utils/constants';\r\nimport { getErrors } from './errors';\r\nimport { SET_ACCOUNT, UPDATE_ACCOUNT } from '../utils/constants';\r\nimport { get, patch, post } from '../utils/api';\r\n\r\nexport const setAccount = (accountDetails) => ({\r\n  type: SET_ACCOUNT,\r\n  accountDetails\r\n});\r\n\r\nexport const updateAccountBalance = (amountToChange, operation) => ({\r\n  type: UPDATE_ACCOUNT,\r\n  amountToChange,\r\n  operation\r\n});\r\n\r\nexport const initiateGetAccntDetails = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const account = await get(`${BASE_API_URL}/account`);\r\n      return dispatch(setAccount(account.data));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateAddAccntDetails = (account_no, bank_name, ifsc) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      return await post(`${BASE_API_URL}/account`, {\r\n        account_no,\r\n        bank_name,\r\n        ifsc\r\n      });\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateUpdateAccntDetails = (ifsc) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const account = await patch(`${BASE_API_URL}/account`, {\r\n        ifsc\r\n      });\r\n      dispatch(setAccount(account.data));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n//export const resetAccount = () => ({\r\n    //type: RESET_ACCOUNT\r\n // });","import download from 'downloadjs';\r\nimport {\r\n  BASE_API_URL,\r\n  ADD_TRANSACTION,\r\n  SET_TRANSACTIONS\r\n} from '../utils/constants';\r\nimport { getErrors } from './errors';\r\nimport { updateAccountBalance } from './account';\r\nimport { get, post } from '../utils/api';\r\n\r\nexport const addTransaction = (transaction) => ({\r\n  type: ADD_TRANSACTION,\r\n  transaction\r\n});\r\n\r\nexport const initiateDepositAmount = (account_id, amount) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const transaction = {\r\n        transaction_date: new Date(),\r\n        deposit_amount: amount\r\n      };\r\n      await post(`${BASE_API_URL}/deposit/${account_id}`, transaction);\r\n      dispatch(\r\n        addTransaction({\r\n          ...transaction,\r\n          withdraw_amount: null\r\n        })\r\n      );\r\n      dispatch(updateAccountBalance(amount, 'deposit'));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateWithdrawAmount = (account_id, amount) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const transaction = {\r\n        transaction_date: new Date(),\r\n        withdraw_amount: amount\r\n      };\r\n      await post(`${BASE_API_URL}/withdraw/${account_id}`, transaction);\r\n      dispatch(\r\n        addTransaction({\r\n          ...transaction,\r\n          deposit_amount: null\r\n        })\r\n      );\r\n      dispatch(updateAccountBalance(amount, 'withdraw'));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const setTransactions = (transactions) => ({\r\n  type: SET_TRANSACTIONS,\r\n  transactions\r\n});\r\n\r\nexport const initiateGetTransactions = (account_id, start_date, end_date) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let query;\r\n      if (start_date && end_date) {\r\n        query = `${BASE_API_URL}/transactions/${account_id}?start_date=${start_date}&end_date=${end_date}`;\r\n      } else {\r\n        query = `${BASE_API_URL}/transactions/${account_id}`;\r\n      }\r\n      const profile = await get(query);\r\n      dispatch(setTransactions(profile.data));\r\n    } catch (error) {\r\n      error.response && dispatch(getErrors(error.response.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const downloadReport = (account_id, start_date, end_date) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await get(\r\n        `${BASE_API_URL}/download/${account_id}?start_date=${start_date}&end_date=${end_date}`,\r\n        { responseType: 'blob' }\r\n      );\r\n      return download(result.data, 'transactions.pdf', 'application/pdf');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        dispatch(\r\n          getErrors({\r\n            transactions_error: 'Error while downloading..Try again later.'\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n};","export const maskNumber = (number) => {\r\n    return number.slice(-4).padStart(number.length, '*');\r\n  };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateFields } from '../utils/common';\r\n\r\nclass AddAccountForm extends React.Component {\r\n  state = {\r\n    account_no: '',\r\n    bank_name: '',\r\n    ifsc: '',\r\n    errorMsg: ''\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({ errorMsg: this.props.errors });\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleAddAccount = (event) => {\r\n    event.preventDefault();\r\n    const { account_no, bank_name, ifsc } = this.state;\r\n    const fieldsToValidate = [{ account_no }, { bank_name }, { ifsc }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          add_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      this.props.handleAddAccount(this.state);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { account_no, bank_name, ifsc, errorMsg } = this.state;\r\n    return (\r\n      <div className=\"edit-account-form  col-md-6 offset-md-3\">\r\n        <Form onSubmit={this.handleAddAccount} className=\"account-form\">\r\n          {errorMsg && errorMsg.add_error && (\r\n            <p className=\"errorMsg centered-message\">{errorMsg.add_error}</p>\r\n          )}\r\n          <Form.Group controlId=\"type\">\r\n            <Form.Label>Add account</Form.Label>\r\n          </Form.Group>\r\n          <hr />\r\n          <Form.Group controlId=\"accnt_no\">\r\n            <Form.Label>Account number: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"account_no\"\r\n              placeholder=\"Enter your account number\"\r\n              value={account_no}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"accnt_no\">\r\n            <Form.Label>Bank name: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"bank_name\"\r\n              placeholder=\"Enter your bank name\"\r\n              value={bank_name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"ifsc\">\r\n            <Form.Label>IFSC Code:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"ifsc\"\r\n              placeholder=\"Enter new IFSC code\"\r\n              value={ifsc}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddAccountForm);","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {\r\n  initiateGetAccntDetails,\r\n  initiateAddAccntDetails,\r\n  initiateUpdateAccntDetails\r\n} from '../actions/account';\r\nimport {\r\n  initiateWithdrawAmount,\r\n  initiateDepositAmount\r\n} from '../actions/transactions';\r\nimport { resetErrors } from '../actions/errors';\r\nimport { validateFields } from '../utils/common';\r\nimport { maskNumber } from '../utils/mask';\r\nimport AddAccountForm from './AddAccountForm';\r\n\r\nclass AccountForm extends React.Component {\r\n  state = {\r\n    amount: '',\r\n    account: this.props.account,\r\n    editAccount: false,\r\n    ifsc: '',\r\n    errorMsg: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { email } = this.props;\r\n    if (email) {\r\n      this.props.dispatch(initiateGetAccntDetails());\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(resetErrors());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.account, this.props.account)) {\r\n      this.setState({ account: this.props.account });\r\n    }\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({ errorMsg: this.props.errors });\r\n    }\r\n  }\r\n\r\n  handleUpdateAccount = (ifsc) => {\r\n    const fieldsToValidate = [{ ifsc }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          update_error: 'Please enter ifsc code.'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: ''\r\n      });\r\n      this.props.dispatch(initiateUpdateAccntDetails(ifsc));\r\n    }\r\n  };\r\n\r\n  handleAmountChange = (event) => {\r\n    this.setState({ amount: event.target.value });\r\n  };\r\n\r\n  handleEditAccount = (event) => {\r\n    event.preventDefault();\r\n    this.setState((prevState) => ({ editAccount: !prevState.editAccount }));\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      ifsc: event.target.value\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    let { amount, account } = this.state;\r\n\r\n    const { selectedType } = this.props;\r\n    const fieldsToValidate = [{ amount }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          [selectedType === 'withdraw'\r\n            ? 'withdraw_error'\r\n            : 'add_error']: 'Please enter an amount.'\r\n        }\r\n      });\r\n    } else {\r\n      let { total_balance } = account;\r\n      amount = +amount;\r\n      total_balance = +total_balance;\r\n      if (selectedType === 'withdraw' && amount <= total_balance) {\r\n        this.props.dispatch(initiateWithdrawAmount(account.account_id, amount));\r\n        this.setState({\r\n          errorMsg: ''\r\n        });\r\n      } else if (selectedType === 'deposit') {\r\n        this.props.dispatch(initiateDepositAmount(account.account_id, amount));\r\n        this.setState({\r\n          errorMsg: ''\r\n        });\r\n      } else {\r\n        this.setState({\r\n          errorMsg: {\r\n            [selectedType === 'withdraw'\r\n              ? 'withdraw_error'\r\n              : 'add_error']: \"You don't have enough balance in your account\"\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddAccount = (account) => {\r\n    const { account_no, bank_name, ifsc } = account;\r\n    this.props\r\n      .dispatch(initiateAddAccntDetails(account_no, bank_name, ifsc))\r\n      .then(() => this.props.dispatch(initiateGetAccntDetails()));\r\n  };\r\n\r\n  render() {\r\n    const { selectedType } = this.props;\r\n    const { editAccount, ifsc, errorMsg, account } = this.state;\r\n    const account_no = account.account_no ? maskNumber(account.account_no) : '';\r\n    const type = selectedType.charAt(0).toUpperCase() + selectedType.slice(1);\r\n    return account_no ? (\r\n      editAccount ? (\r\n        <div className=\"edit-account-form  col-md-6 offset-md-3\">\r\n          <h3>\r\n            Account details\r\n            <a\r\n              href=\"/#\"\r\n              className=\"edit-account\"\r\n              onClick={this.handleEditAccount}\r\n            >\r\n              Go Back\r\n            </a>\r\n          </h3>\r\n          <hr />\r\n          <Form>\r\n            {errorMsg && errorMsg.update_error && (\r\n              <p className=\"errorMsg\">{errorMsg.update_error}</p>\r\n            )}\r\n            <Form.Group controlId=\"acc_no\">\r\n              <Form.Label>Account number:</Form.Label>\r\n              <span className=\"label-value\">{account && account_no}</span>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"bank_name\">\r\n              <Form.Label>Bank name:</Form.Label>\r\n              <span className=\"label-value\">\r\n                {account && account.bank_name}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"ifsc\">\r\n              <Form.Label>IFSC code:</Form.Label>\r\n              <span className=\"label-value\">{account && account.ifsc}</span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter new IFSC code\"\r\n                value={ifsc}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => this.handleUpdateAccount(ifsc)}\r\n            >\r\n              Update details\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"account-form col-md-6 offset-md-3\">\r\n          {errorMsg && errorMsg.withdraw_error && (\r\n            <p className=\"errorMsg\">{errorMsg.withdraw_error}</p>\r\n          )}\r\n          {errorMsg && errorMsg.add_error && (\r\n            <p className=\"errorMsg\">{errorMsg.add_error}</p>\r\n          )}\r\n          <Form onSubmit={this.handleOnSubmit} className=\"account-form\">\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>{type}</Form.Label>\r\n              <a\r\n                href=\"/#\"\r\n                className=\"edit-account\"\r\n                onClick={this.handleEditAccount}\r\n              >\r\n                Edit Account Details\r\n              </a>\r\n            </Form.Group>\r\n            <hr />\r\n            <Form.Group controlId=\"accnt_no\">\r\n              <Form.Label>Account number: </Form.Label>\r\n              <span className=\"label-value\">{account && account_no}</span>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"accnt_no\">\r\n              <Form.Label>Available balance: </Form.Label>\r\n              <span className=\"label-value\">\r\n                {account && account.total_balance}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"amount\">\r\n              <Form.Label>Amount:</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={`Enter amount to ${selectedType}`}\r\n                value={this.state.amount}\r\n                onChange={this.handleAmountChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      )\r\n    ) : (\r\n      <AddAccountForm handleAddAccount={this.handleAddAccount} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.auth && state.auth.email,\r\n  account: state.account,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(AccountForm);","import React from 'react';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\n\r\nconst Report = ({ transactions }) => {\r\n  return (\r\n    <div className=\"report-table\">\r\n      <BootstrapTable data={transactions} striped hover pagination>\r\n        <TableHeaderColumn isKey dataField=\"formatted_date\">\r\n          Date\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"deposit_amount\">\r\n          Deposits\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"withdraw_amount\">\r\n          Withdrawals\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"balance\">Balance</TableHeaderColumn>\r\n      </BootstrapTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n//import DatePicker from 'react-datepicker';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport {\r\n  initiateGetTransactions,\r\n  downloadReport\r\n} from '../actions/transactions';\r\nimport { initiateAddAccntDetails } from '../actions/account';\r\nimport Report from './Report';\r\nimport { maskNumber } from '../utils/mask';\r\nimport { resetErrors } from '../actions/errors';\r\nimport AddAccountForm from './AddAccountForm';\r\n\r\nclass Summary extends React.Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    transactions: [],\r\n    isDownloading: false,\r\n    formSubmitted: false,\r\n    errorMsg: ''\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.transactions, this.props.transactions)) {\r\n      this.setState({\r\n        transactions: this.props.transactions\r\n      });\r\n    }\r\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\r\n      this.setState({\r\n        errorMsg: this.props.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(resetErrors());\r\n  }\r\n\r\n  handleStartDateChange = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ formSubmitted: true });\r\n    const { startDate, endDate } = this.state;\r\n    const convertedStartDate = moment(startDate).format('YYYY-MM-DD');\r\n    const convertedEndDate = moment(endDate).format('YYYY-MM-DD');\r\n\r\n    const { account } = this.props;\r\n    this.props.dispatch(\r\n      initiateGetTransactions(\r\n        account.account_id,\r\n        convertedStartDate,\r\n        convertedEndDate\r\n      )\r\n    );\r\n  };\r\n\r\n  downloadReport = (account_id, start_date, end_date) => {\r\n    start_date = moment(start_date).format('YYYY-MM-DD');\r\n    end_date = moment(end_date).format('YYYY-MM-DD');\r\n    this.setState({ isDownloading: true, errorMsg: '' });\r\n    this.props\r\n      .dispatch(downloadReport(account_id, start_date, end_date))\r\n      .then(() => this.setState({ isDownloading: false }));\r\n  };\r\n\r\n  handleAddAccount = (account) => {\r\n    const { account_no, bank_name, ifsc } = account;\r\n    this.props.dispatch(initiateAddAccntDetails(account_no, bank_name, ifsc));\r\n  };\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n    const {\r\n      startDate,\r\n      endDate,\r\n      transactions,\r\n      isDownloading,\r\n      formSubmitted,\r\n      errorMsg\r\n    } = this.state;\r\n    const account_no = account.account_no ? maskNumber(account.account_no) : '';\r\n\r\n    return account_no ? (\r\n      <div className=\"summary-form\">\r\n        <p>Transaction History</p>\r\n        {errorMsg && errorMsg.transactions_error && (\r\n          <p className=\"errorMsg\" style={{ maxWidth: 'unset' }}>\r\n            {errorMsg.transactions_error}\r\n          </p>\r\n        )}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"acc_no\">\r\n            <Form.Label>Account number:</Form.Label>\r\n            <span className=\"label-value\">{account && account_no}</span>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"bank_name\">\r\n            <Form.Label className=\"label\">Start date</Form.Label>\r\n            //\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"bank_name\">\r\n            <Form.Label className=\"label\">End date</Form.Label>\r\n            //\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"btn-report\">\r\n            Generate Report\r\n          </Button>\r\n        </Form>\r\n\r\n        {transactions.length > 0 ? (\r\n          <div className=\"transactions-section\">\r\n            {isDownloading ? (\r\n              <p className=\"loading\">Downloading...</p>\r\n            ) : (\r\n              <React.Fragment>\r\n                <div className=\"main-info\">\r\n                  <p>Account number: {account_no}</p>\r\n                  <p>Bank name: {account.bank_name}</p>\r\n                  <p>IFSC code: {account.ifsc}</p>\r\n                  <p>Total available balance: {account.total_balance}</p>\r\n                </div>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    this.downloadReport(account.account_id, startDate, endDate)\r\n                  }\r\n                >\r\n                  Download Report\r\n                </Button>\r\n                <h5>\r\n                  Detailed transactions between{' '}\r\n                  {moment(startDate).format('Do MMMM YYYY')} and{' '}\r\n                  {moment(endDate).format('Do MMMM YYYY')}\r\n                </h5>\r\n                <Report transactions={transactions} />\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          formSubmitted &&\r\n          _.isEmpty(errorMsg) && (\r\n            <p>No transactions found within selected date range.</p>\r\n          )\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <AddAccountForm handleAddAccount={this.handleAddAccount} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  account: state.account,\r\n  transactions: state.transactions,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Summary);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport AccountForm from './AccountForm';\r\nimport Summary from './Summary';\r\n\r\nclass Account extends React.Component {\r\n  state = {\r\n    selectedType: 'withdraw'\r\n  };\r\n\r\n  setSelectedType = (selectedType) => {\r\n    this.setState({ selectedType });\r\n  };\r\n\r\n  render() {\r\n    const { selectedType } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"account\">\r\n          <Button\r\n            variant=\"primary\"\r\n            className={`${\r\n              selectedType === 'withdraw' ? 'active account-btn' : 'account-btn'\r\n            }`}\r\n            onClick={() => this.setSelectedType('withdraw')}\r\n          >\r\n            Withdraw\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            className={`${\r\n              selectedType === 'deposit' ? 'active account-btn' : 'account-btn'\r\n            }`}\r\n            onClick={() => this.setSelectedType('deposit')}\r\n          >\r\n            Deposit\r\n          </Button>\r\n          <Button\r\n            variant=\"info\"\r\n            className={`${\r\n              selectedType === 'summary' ? 'active account-btn' : 'account-btn'\r\n            }`}\r\n            onClick={() => this.setSelectedType('summary')}\r\n          >\r\n            Summary\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {selectedType === 'withdraw' || selectedType === 'deposit' ? (\r\n            <AccountForm selectedType={selectedType} />\r\n          ) : (\r\n            <Summary />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Account);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Route, Switch, Router } from 'react-router-dom';\r\nimport Login from '../components/Login';\r\nimport Register from '../components/Register';\r\nimport Profile from '../components/Profile';\r\nimport Header from '../components/Header';\r\nimport Logout from '../components/Logout';\r\nimport Account from '../components/Account';\r\nexport const history = createBrowserHistory();\r\n\r\nconst AppRouter = ({ auth }) => {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        {!_.isEmpty(auth.token) && <Header />}\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/\" component={Login} exact={true} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/account\" component={Account} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppRouter);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from './router/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport './css/main.scss';\r\nimport { maintainSession } from './utils/common';\r\n\r\nmaintainSession();\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}